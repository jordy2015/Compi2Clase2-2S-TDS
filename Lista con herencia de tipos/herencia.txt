///////////////Herencia
void TipoDato(std::string Tdato, std::string dato){
	std::cout<<Tdato<<" "<<dato<<std::endl;
}



S1 : S2 S3 pcoma{std::cout<<"aceptada"<<std::endl;};

S2 : Id {$$= new Operador(); $$->Tipo=$1;};

S3 : Id{TipoDato($<Concat>0->Tipo,$1);} coma {$<Concat>$=$<Concat>0;} S3{$$=new Operador();}
	|Id{$$=new Operador();TipoDato($<Concat>0->Tipo,$1);}


//////////////Definicion
S1 : S2 {std::cout<<$1->Cadena<<" = "<<$1->MiValor<<std::endl;};

S2 : S2 mas S2{$$=new Operador(); $$->MiValor=$1->MiValor+$3->MiValor; $$->Cadena=$1->Cadena+" + "+$3->Cadena;};
	|S2 menos S2{$$=new Operador(); $$->MiValor=$1->MiValor-$3->MiValor; $$->Cadena=$1->Cadena+" - "+$3->Cadena;};
	|pa S2 pc {$$=$2;} ;
	|numero{$$=new Operador(); $$->Cadena=$1; $$->MiValor=atoi($1);};